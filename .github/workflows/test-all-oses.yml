
name: TEST_ALL_OSes
on: [push, pull_request]

env:
    GITHUB_REPO: ldorau/rpma
    # use GitHub Container Registry as a repository of docker images
    GH_CR_ADDR:  ghcr.io
    DOCKER_REPO: ghcr.io/ldorau/rpma
    # use org's Private Access Token to log in to GitHub Container Registry
    GH_CR_USER:  ${{ secrets.GH_CR_USER }}
    GH_CR_PAT:   ${{ secrets.GH_CR_PAT }}
    DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    HOST_WORKDIR: /home/runner/work/rpma/rpma
    WORKDIR:      utils/docker
    TYPE:         normal

jobs:
  gcc:
    name: GCC
    runs-on: ubuntu-latest
    env:
       CC:         gcc
       PUSH_IMAGE: 1
    strategy:
      fail-fast: false
      matrix:
        CONFIG: [
                 "N=Debian9      OS=debian  OS_VER=9"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
