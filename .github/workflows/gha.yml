#
# The 'XXX_DISABLE_' suffix is used in this file to disable this action:
# XXX_DISABLE_COVERAGE - disables uploads of coverage reports.
# It is disabled, because it conflicts with the same one run on Travis.
# Only one CI (Travis or GitHub Actions) can run it at the time, so it can be enabled here,
# when we decide to switch from Travis to GitHub Actions. The 'XXX_DISABLE_' suffix should be removed then.
#

name: RPMA
on: [push, pull_request]

env:
    GITHUB_REPO:             pmem/rpma
    DOCKERHUB_REPO:          pmem/rpma
    DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
    DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
    DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    HOST_WORKDIR:            /home/runner/work/rpma/rpma
    WORKDIR:                 utils/docker
    PUSH_IMAGE:              1

jobs:
  latest:
    name: Latest
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TYPE:       normal
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["N=1 OS=ubuntu         OS_VER=latest",
                 "N=2 OS=fedora         OS_VER=latest",
                 "N=3 OS=debian         OS_VER=latest",
                 "N=4 OS=opensuse-leap  OS_VER=latest",
                 "N=5 OS=centos         OS_VER=latest"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"

#################################### OLDER ####################################
  older:
    name: Older
    runs-on: ubuntu-latest
    env:
      TYPE:       normal
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["N=6  OS=fedora OS_VER=30",
                 "N=7  OS=fedora OS_VER=29",
                 "N=8  OS=fedora OS_VER=28",
                 "N=9  OS=fedora OS_VER=27",
                 "N=10 OS=ubuntu OS_VER=18.04",
                 "N=11 OS=centos OS_VER=8",
                 "N=12 OS=centos OS_VER=7",
                 "N=13 OS=debian OS_VER=stable",
                 "N=14 OS=debian OS_VER=10"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"

#################################### NEWEST ####################################
  newest:
    name: Newest
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TYPE:       normal
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["N=15 OS=archlinux-base       OS_VER=latest",
                 "N=16 OS=debian               OS_VER=testing",
                 "N=17 OS=fedora               OS_VER=rawhide",
                 "N=18 OS=opensuse-tumbleweed  OS_VER=latest",
                 "N=19 OS=ubuntu               OS_VER=rolling"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
