
Fd_evch_wr ==> id

rdma_accept(struct rdma_cm_id *id, struct rdma_conn_param *conn_param)
- RDMA_CM_EVENT_ESTABLISHED

rdma_ack_cm_event(struct rdma_cm_event *event)
- RDMA_CM_EVENT_ESTABLISHED
- event->id
- event->listen_id

rdma_connect(struct rdma_cm_id *id, struct rdma_conn_param *conn_param)
- RDMA_CM_EVENT_CONNECT_REQUEST

rdma_disconnect(struct rdma_cm_id *id)
- RDMA_CM_EVENT_DISCONNECTED

struct rdma_cm_id {
	struct ibv_context	*verbs;
	struct rdma_event_channel *channel;
	void			*context;
	struct ibv_qp		*qp;
	struct rdma_route	 route;
	enum rdma_port_space	 ps;
	uint8_t			 port_num;
	struct rdma_cm_event	*event;
	struct ibv_comp_channel *send_cq_channel;
	struct ibv_cq		*send_cq;
	struct ibv_comp_channel *recv_cq_channel;
	struct ibv_cq		*recv_cq;
	struct ibv_srq		*srq;
	struct ibv_pd		*pd;
	enum ibv_qp_type	qp_type;
};

struct ibv_context {
	struct ibv_device      *device;
	struct ibv_context_ops	ops;
	int			cmd_fd;
	int			async_fd;
	int			num_comp_vectors;
	pthread_mutex_t		mutex;
	void		       *abi_compat;
};
